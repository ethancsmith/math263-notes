Traceback (most recent call last):
  File "/opt/anaconda3/envs/math263/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/anaconda3/envs/math263/lib/python3.12/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/envs/math263/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/envs/math263/lib/python3.12/asyncio/base_events.py", line 686, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/opt/anaconda3/envs/math263/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/opt/anaconda3/envs/math263/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/anaconda3/envs/math263/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import numpy as np
import sympy
from IPython.display import display, Markdown
import matplotlib.pyplot as plt

# solve the IVP symbolically with the sympy library
x = sympy.Symbol('x');
y = sympy.Function('y');
ode = sympy.Eq(y(x).diff(x, 2)-2*y(x).diff(x) + 2*y(x), sympy.exp(2*x)*sympy.sin(x));
a, b = 0, 1;
alpha = [sympy.Rational(-2,5), sympy.Rational(-3,5)];
soln = sympy.dsolve(ode, y(x), ics={y(a): alpha[0], y(x).diff(x).subs(x, a): alpha[1]});
soln = sympy.simplify(soln);
display(Markdown(f"The exact symbolic solution to the IVP is ${sympy.latex(soln)}$."))
Dsoln_rhs = sympy.simplify(soln.rhs.diff(x));

# lambdify the symbolic solution
sym_y = sympy.lambdify(x, soln.rhs, modules=['numpy']);
sym_Dy = sympy.lambdify(x, Dsoln_rhs, modules=['numpy']);
xvals = np.linspace(a, b, num=40);

# plot symbolic solution with matplotlib.pyplot
fig, axs = plt.subplots(ncols=2, figsize=(8, 5), layout="constrained");
axs[0].plot(xvals, sym_y(xvals), label=f"${sympy.latex(soln)}$");
axs[1].plot(xvals, sym_Dy(xvals), label=f"$y'(x) = {sympy.latex(Dsoln_rhs)}$");
fig.suptitle(f"${sympy.latex(ode)}$, $y({a}) = {alpha[0]}$, $y'({a}) = {alpha[1]}$")
for i in len(axs):
	axs[i].set_xlabel(r"$x$");
	axs[i].legend(loc="upper left");
	axs[i].grid(True)
axs[0].set_ylabel(r"$y$");
axs[1].set_ylabel(r"$y'$");
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mTypeError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[1], line 27[0m
[1;32m     25[0m axs[[38;5;241m1[39m][38;5;241m.[39mplot(xvals, sym_Dy(xvals), label[38;5;241m=[39m[38;5;124mf[39m[38;5;124m"[39m[38;5;124m$y[39m[38;5;124m'[39m[38;5;124m(x) = [39m[38;5;132;01m{[39;00msympy[38;5;241m.[39mlatex(Dsoln_rhs)[38;5;132;01m}[39;00m[38;5;124m$[39m[38;5;124m"[39m);
[1;32m     26[0m fig[38;5;241m.[39msuptitle([38;5;124mf[39m[38;5;124m"[39m[38;5;124m$[39m[38;5;132;01m{[39;00msympy[38;5;241m.[39mlatex(ode)[38;5;132;01m}[39;00m[38;5;124m$, $y([39m[38;5;132;01m{[39;00ma[38;5;132;01m}[39;00m[38;5;124m) = [39m[38;5;132;01m{[39;00malpha[[38;5;241m0[39m][38;5;132;01m}[39;00m[38;5;124m$, $y[39m[38;5;124m'[39m[38;5;124m([39m[38;5;132;01m{[39;00ma[38;5;132;01m}[39;00m[38;5;124m) = [39m[38;5;132;01m{[39;00malpha[[38;5;241m1[39m][38;5;132;01m}[39;00m[38;5;124m$[39m[38;5;124m"[39m)
[0;32m---> 27[0m [38;5;28;43;01mfor[39;49;00m[43m [49m[43mi[49m[43m [49m[38;5;129;43;01min[39;49;00m[43m [49m[38;5;28;43mlen[39;49m[43m([49m[43maxs[49m[43m)[49m[43m:[49m
[1;32m     28[0m [43m	[49m[43maxs[49m[43m[[49m[43mi[49m[43m][49m[38;5;241;43m.[39;49m[43mset_xlabel[49m[43m([49m[38;5;124;43mr[39;49m[38;5;124;43m"[39;49m[38;5;124;43m$x$[39;49m[38;5;124;43m"[39;49m[43m)[49m[43m;[49m
[1;32m     29[0m [43m	[49m[43maxs[49m[43m[[49m[43mi[49m[43m][49m[38;5;241;43m.[39;49m[43mlegend[49m[43m([49m[43mloc[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mupper left[39;49m[38;5;124;43m"[39;49m[43m)[49m[43m;[49m

[0;31mTypeError[0m: 'int' object is not iterable

