Traceback (most recent call last):
  File "/opt/anaconda3/envs/math263-notes/lib/python3.13/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
    ~~~~~~~~~^
        nb,
        ^^^
    ...<4 lines>...
        **kwargs,
        ^^^^^^^^^
    )
    ^
  File "/opt/anaconda3/envs/math263-notes/lib/python3.13/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/opt/anaconda3/envs/math263-notes/lib/python3.13/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "/opt/anaconda3/envs/math263-notes/lib/python3.13/asyncio/base_events.py", line 720, in run_until_complete
    return future.result()
           ~~~~~~~~~~~~~^^
  File "/opt/anaconda3/envs/math263-notes/lib/python3.13/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
        cell, index, execution_count=self.code_cells_executed + 1
    )
  File "/opt/anaconda3/envs/math263-notes/lib/python3.13/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/anaconda3/envs/math263-notes/lib/python3.13/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import math263
import numpy as np
import sympy
import matplotlib.pyplot as plt
from tabulate import tabulate

plt.style.use('dark_background');

# define IVP parameters
f = lambda x, y: (y/x) - (y/x)**2;
a, b = 1, 2;
y0=1;

# solve the IVP symbolically with the sympy library
x = sympy.Symbol('x');
y = sympy.Function('y');
ode = sympy.Eq(y(x).diff(x), f(x,y(x)));
soln = sympy.dsolve(ode, y(x), ics={y(a): y0}); 
print("The exact symbolic solution to the IVP");
display(ode);
print(f"with initial condition y({a}) = {y0} is");
display(soln);

# convert the symbolic solution to a Python function and plot it with matplotlib.pyplot
sym_y=sympy.lambdify(x, soln.rhs, modules=['numpy']); 
xvals = np.linspace(a, b, num=100);
fig, ax = plt.subplots(layout='constrained');
ax.plot(xvals, sym_y(xvals), color='b', label=f"${sympy.latex(soln)}$");
ax.set_title(f"$y' = {sympy.latex(f(x,y(x)))}$, $y({a})={y0}$");
ax.set_xlabel(r"$x$");
ax.set_ylabel(r"$y$");
ax.legend([f"${sympy.latex(soln)}$"], loc='upper right');
plt.grid(True)

# numerically solve the IVP with n=10 steps of forward Euler and n=10 steps of RK4
n = 10;
(xi, y_euler) = math263.euler(f, a, b, y0, n);
(xi, y_rk4)   = math263.rk4(f, a, b, y0, n);

# plot numerical solutions on top of true solution
ax.plot(xi, y_euler[:, 0], 'ro:', label="Euler");
ax.plot(xi, y_rk4[:, 0], 'go:', label="RK4");
ax.legend(loc='upper left');
plt.show();

# tabulate the results
print("Global errors for Euler's method and RK4.")
table = np.c_[xi, abs(sym_y(xi) - y_euler[:, 0]), abs(sym_y(xi) - y_rk4[:, 0])];
hdrs = ["i", "x_i", "e_{i,Euler} = |y(x_i)-y_i|", "e_{i,RK4} = |y(x_i)-y_i|"];
print(tabulate(table, hdrs, tablefmt='mixed_grid', floatfmt=['0.0f', '0.1f', '0.5e' '0.5e'], showindex=True))
------------------

----- stdout -----
The exact symbolic solution to the IVP
----- stdout -----
with initial condition y(1) = 1 is
----- stdout -----
Global errors for Euler's method and RK4.
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
Cell [0;32mIn[1], line 50[0m
[1;32m     48[0m table [38;5;241m=[39m np[38;5;241m.[39mc_[xi, [38;5;28mabs[39m(sym_y(xi) [38;5;241m-[39m y_euler[:, [38;5;241m0[39m]), [38;5;28mabs[39m(sym_y(xi) [38;5;241m-[39m y_rk4[:, [38;5;241m0[39m])];
[1;32m     49[0m hdrs [38;5;241m=[39m [[38;5;124m"[39m[38;5;124mi[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124mx_i[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124me_[39m[38;5;124m{[39m[38;5;124mi,Euler} = |y(x_i)-y_i|[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124me_[39m[38;5;124m{[39m[38;5;124mi,RK4} = |y(x_i)-y_i|[39m[38;5;124m"[39m];
[0;32m---> 50[0m [38;5;28mprint[39m([43mtabulate[49m[43m([49m[43mtable[49m[43m,[49m[43m [49m[43mhdrs[49m[43m,[49m[43m [49m[43mtablefmt[49m[38;5;241;43m=[39;49m[38;5;124;43m'[39;49m[38;5;124;43mmixed_grid[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[43mfloatfmt[49m[38;5;241;43m=[39;49m[43m[[49m[38;5;124;43m'[39;49m[38;5;124;43m0.0f[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[38;5;124;43m'[39;49m[38;5;124;43m0.1f[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[38;5;124;43m'[39;49m[38;5;124;43m0.5e[39;49m[38;5;124;43m'[39;49m[43m [49m[38;5;124;43m'[39;49m[38;5;124;43m0.5e[39;49m[38;5;124;43m'[39;49m[43m][49m[43m,[49m[43m [49m[43mshowindex[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m[43m)[49m)

File [0;32m/opt/anaconda3/envs/math263-notes/lib/python3.13/site-packages/tabulate/__init__.py:2154[0m, in [0;36mtabulate[0;34m(tabular_data, headers, tablefmt, floatfmt, intfmt, numalign, stralign, missingval, showindex, disable_numparse, colalign, maxcolwidths, rowalign, maxheadercolwidths)[0m
[1;32m   2151[0m     [38;5;28;01mif[39;00m [38;5;28mlen[39m(missing_vals) [38;5;241m<[39m [38;5;28mlen[39m(cols):
[1;32m   2152[0m         missing_vals[38;5;241m.[39mextend(([38;5;28mlen[39m(cols) [38;5;241m-[39m [38;5;28mlen[39m(missing_vals)) [38;5;241m*[39m [_DEFAULT_MISSINGVAL])
[1;32m   2153[0m cols [38;5;241m=[39m [
[0;32m-> 2154[0m     [[43m_format[49m[43m([49m[43mv[49m[43m,[49m[43m [49m[43mct[49m[43m,[49m[43m [49m[43mfl_fmt[49m[43m,[49m[43m [49m[43mint_fmt[49m[43m,[49m[43m [49m[43mmiss_v[49m[43m,[49m[43m [49m[43mhas_invisible[49m[43m)[49m [38;5;28;01mfor[39;00m v [38;5;129;01min[39;00m c]
[1;32m   2155[0m     [38;5;28;01mfor[39;00m c, ct, fl_fmt, int_fmt, miss_v [38;5;129;01min[39;00m [38;5;28mzip[39m(
[1;32m   2156[0m         cols, coltypes, float_formats, int_formats, missing_vals
[1;32m   2157[0m     )
[1;32m   2158[0m ]
[1;32m   2160[0m [38;5;66;03m# align columns[39;00m
[1;32m   2161[0m aligns [38;5;241m=[39m [numalign [38;5;28;01mif[39;00m ct [38;5;129;01min[39;00m [[38;5;28mint[39m, [38;5;28mfloat[39m] [38;5;28;01melse[39;00m stralign [38;5;28;01mfor[39;00m ct [38;5;129;01min[39;00m coltypes]

File [0;32m/opt/anaconda3/envs/math263-notes/lib/python3.13/site-packages/tabulate/__init__.py:1232[0m, in [0;36m_format[0;34m(val, valtype, floatfmt, intfmt, missingval, has_invisible)[0m
[1;32m   1230[0m         [38;5;28;01mreturn[39;00m val[38;5;241m.[39mreplace(raw_val, formatted_val)
[1;32m   1231[0m     [38;5;28;01melse[39;00m:
[0;32m-> 1232[0m         [38;5;28;01mreturn[39;00m [38;5;28;43mformat[39;49m[43m([49m[38;5;28;43mfloat[39;49m[43m([49m[43mval[49m[43m)[49m[43m,[49m[43m [49m[43mfloatfmt[49m[43m)[49m
[1;32m   1233[0m [38;5;28;01melse[39;00m:
[1;32m   1234[0m     [38;5;28;01mreturn[39;00m [38;5;124mf[39m[38;5;124m"[39m[38;5;132;01m{[39;00mval[38;5;132;01m}[39;00m[38;5;124m"[39m

[0;31mValueError[0m: Invalid format specifier '0.5e0.5e' for object of type 'float'

